{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react'; // eslint-disable-next-line prettier/prettier\n\nconst Text = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    anchorX = 'center',\n    anchorY = 'middle',\n    font,\n    children,\n    onSync,\n    ...props\n  } = _ref;\n  const invalidate = useThree(_ref2 => {\n    let {\n      invalidate\n    } = _ref2;\n    return invalidate;\n  });\n  const [troikaMesh] = React.useState(() => new Text$1());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters: text\n  }, res)), ['troika-text', font, text]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\nexport { Text };","map":{"version":3,"sources":["C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@react-three/drei/core/Text.js"],"names":["_extends","React","Text","Text$1","preloadFont","useThree","suspend","forwardRef","ref","anchorX","anchorY","font","children","onSync","props","invalidate","troikaMesh","useState","nodes","text","useMemo","n","t","Children","forEach","child","push","Promise","res","characters","useLayoutEffect","sync","useEffect","dispose","createElement","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAI,IAAIC,MAAjB,EAAyBC,WAAzB,QAA4C,mBAA5C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,MAAMJ,IAAI,GAAG,aAAaD,KAAK,CAACM,UAAN,CAAiB,OAOxCC,GAPwC,KAOhC;AAAA,MAPiC;AAC1CC,IAAAA,OAAO,GAAG,QADgC;AAE1CC,IAAAA,OAAO,GAAG,QAFgC;AAG1CC,IAAAA,IAH0C;AAI1CC,IAAAA,QAJ0C;AAK1CC,IAAAA,MAL0C;AAM1C,OAAGC;AANuC,GAOjC;AACT,QAAMC,UAAU,GAAGV,QAAQ,CAAC;AAAA,QAAC;AAC3BU,MAAAA;AAD2B,KAAD;AAAA,WAEtBA,UAFsB;AAAA,GAAD,CAA3B;AAGA,QAAM,CAACC,UAAD,IAAef,KAAK,CAACgB,QAAN,CAAe,MAAM,IAAId,MAAJ,EAArB,CAArB;AACA,QAAM,CAACe,KAAD,EAAQC,IAAR,IAAgBlB,KAAK,CAACmB,OAAN,CAAc,MAAM;AACxC,UAAMC,CAAC,GAAG,EAAV;AACA,QAAIC,CAAC,GAAG,EAAR;AACArB,IAAAA,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,KAAK,IAAI;AACxC,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AAC1DH,QAAAA,CAAC,IAAIG,KAAL;AACD,OAFD,MAEO;AACLJ,QAAAA,CAAC,CAACK,IAAF,CAAOD,KAAP;AACD;AACF,KAND;AAOA,WAAO,CAACJ,CAAD,EAAIC,CAAJ,CAAP;AACD,GAXqB,EAWnB,CAACV,QAAD,CAXmB,CAAtB;AAYAN,EAAAA,OAAO,CAAC,MAAM,IAAIqB,OAAJ,CAAYC,GAAG,IAAIxB,WAAW,CAAC;AAC3CO,IAAAA,IAD2C;AAE3CkB,IAAAA,UAAU,EAAEV;AAF+B,GAAD,EAGzCS,GAHyC,CAA9B,CAAP,EAGG,CAAC,aAAD,EAAgBjB,IAAhB,EAAsBQ,IAAtB,CAHH,CAAP;AAIAlB,EAAAA,KAAK,CAAC6B,eAAN,CAAsB,MAAM,KAAKd,UAAU,CAACe,IAAX,CAAgB,MAAM;AACrDhB,IAAAA,UAAU;AACV,QAAIF,MAAJ,EAAYA,MAAM,CAACG,UAAD,CAAN;AACb,GAHgC,CAAjC;AAIAf,EAAAA,KAAK,CAAC+B,SAAN,CAAgB,MAAM;AACpB,WAAO,MAAMhB,UAAU,CAACiB,OAAX,EAAb;AACD,GAFD,EAEG,CAACjB,UAAD,CAFH;AAGA,SAAO,aAAaf,KAAK,CAACiC,aAAN,CAAoB,WAApB,EAAiClC,QAAQ,CAAC;AAC5DmC,IAAAA,MAAM,EAAEnB,UADoD;AAE5DR,IAAAA,GAAG,EAAEA,GAFuD;AAG5DG,IAAAA,IAAI,EAAEA,IAHsD;AAI5DQ,IAAAA,IAAI,EAAEA,IAJsD;AAK5DV,IAAAA,OAAO,EAAEA,OALmD;AAM5DC,IAAAA,OAAO,EAAEA;AANmD,GAAD,EAO1DI,KAP0D,CAAzC,EAOTI,KAPS,CAApB;AAQD,CA3CyB,CAA1B;AA6CA,SAAShB,IAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\n// eslint-disable-next-line prettier/prettier\nconst Text = /*#__PURE__*/React.forwardRef(({\n  anchorX = 'center',\n  anchorY = 'middle',\n  font,\n  children,\n  onSync,\n  ...props\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new Text$1());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters: text\n  }, res)), ['troika-text', font, text]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\n\nexport { Text };\n"]},"metadata":{},"sourceType":"module"}
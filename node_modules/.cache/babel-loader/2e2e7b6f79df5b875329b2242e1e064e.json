{"ast":null,"code":"import _classCallCheck from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\n\nvar GlitchPass = /*#__PURE__*/function (_Pass) {\n  _inherits(GlitchPass, _Pass);\n\n  var _super = _createSuper(GlitchPass);\n\n  function GlitchPass() {\n    var _this;\n\n    var dt_size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 64;\n\n    _classCallCheck(this, GlitchPass);\n\n    _this = _super.call(this);\n    if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n    var shader = DigitalGlitch;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.uniforms['tDisp'].value = _this.generateHeightmap(dt_size);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    _this.goWild = false;\n    _this.curF = 0;\n\n    _this.generateTrigger();\n\n    return _this;\n  }\n\n  _createClass(GlitchPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer\n    /*, deltaTime, maskActive */\n    ) {\n      if (renderer.capabilities.isWebGL2 === false) this.uniforms['tDisp'].value.format = LuminanceFormat;\n      this.uniforms['tDiffuse'].value = readBuffer.texture;\n      this.uniforms['seed'].value = Math.random(); //default seeding\n\n      this.uniforms['byp'].value = 0;\n\n      if (this.curF % this.randX == 0 || this.goWild == true) {\n        this.uniforms['amount'].value = Math.random() / 30;\n        this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n        this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1);\n        this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1);\n        this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n        this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n        this.curF = 0;\n        this.generateTrigger();\n      } else if (this.curF % this.randX < this.randX / 5) {\n        this.uniforms['amount'].value = Math.random() / 90;\n        this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n        this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n        this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n        this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3);\n        this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3);\n      } else if (this.goWild == false) {\n        this.uniforms['byp'].value = 1;\n      }\n\n      this.curF++;\n\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }, {\n    key: \"generateTrigger\",\n    value: function generateTrigger() {\n      this.randX = MathUtils.randInt(120, 240);\n    }\n  }, {\n    key: \"generateHeightmap\",\n    value: function generateHeightmap(dt_size) {\n      var data_arr = new Float32Array(dt_size * dt_size);\n      var length = dt_size * dt_size;\n\n      for (var i = 0; i < length; i++) {\n        var val = MathUtils.randFloat(0, 1);\n        data_arr[i] = val;\n      }\n\n      var texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }]);\n\n  return GlitchPass;\n}(Pass);\n\nexport { GlitchPass };","map":{"version":3,"sources":["C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/three-stdlib/postprocessing/GlitchPass.js"],"names":["UniformsUtils","ShaderMaterial","LuminanceFormat","MathUtils","DataTexture","RedFormat","FloatType","Pass","FullScreenQuad","DigitalGlitch","GlitchPass","dt_size","undefined","console","error","shader","uniforms","clone","value","generateHeightmap","material","vertexShader","fragmentShader","fsQuad","goWild","curF","generateTrigger","renderer","writeBuffer","readBuffer","capabilities","isWebGL2","format","texture","Math","random","randX","randFloat","PI","renderToScreen","setRenderTarget","render","clear","randInt","data_arr","Float32Array","length","i","val","needsUpdate"],"mappings":"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","sourcesContent":["import { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { DigitalGlitch } from '../shaders/DigitalGlitch.js';\n\nclass GlitchPass extends Pass {\n  constructor(dt_size = 64) {\n    super();\n    if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on DigitalGlitch');\n    const shader = DigitalGlitch;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['tDisp'].value = this.generateHeightmap(dt_size);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n    this.goWild = false;\n    this.curF = 0;\n    this.generateTrigger();\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    if (renderer.capabilities.isWebGL2 === false) this.uniforms['tDisp'].value.format = LuminanceFormat;\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['seed'].value = Math.random(); //default seeding\n\n    this.uniforms['byp'].value = 0;\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90;\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1);\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1;\n    }\n\n    this.curF++;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n  generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  }\n\n  generateHeightmap(dt_size) {\n    const data_arr = new Float32Array(dt_size * dt_size);\n    const length = dt_size * dt_size;\n\n    for (let i = 0; i < length; i++) {\n      const val = MathUtils.randFloat(0, 1);\n      data_arr[i] = val;\n    }\n\n    const texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  }\n\n}\n\nexport { GlitchPass };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"anchorX\", \"anchorY\", \"font\", \"children\", \"onSync\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react'; // eslint-disable-next-line prettier/prettier\n\nvar Text = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$anchorX = _ref.anchorX,\n      anchorX = _ref$anchorX === void 0 ? 'center' : _ref$anchorX,\n      _ref$anchorY = _ref.anchorY,\n      anchorY = _ref$anchorY === void 0 ? 'middle' : _ref$anchorY,\n      font = _ref.font,\n      children = _ref.children,\n      onSync = _ref.onSync,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var invalidate = useThree(function (_ref2) {\n    var invalidate = _ref2.invalidate;\n    return invalidate;\n  });\n\n  var _React$useState = React.useState(function () {\n    return new Text$1();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      troikaMesh = _React$useState2[0];\n\n  var _React$useMemo = React.useMemo(function () {\n    var n = [];\n    var t = '';\n    React.Children.forEach(children, function (child) {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      nodes = _React$useMemo2[0],\n      text = _React$useMemo2[1];\n\n  suspend(function () {\n    return new Promise(function (res) {\n      return preloadFont({\n        font: font,\n        characters: text\n      }, res);\n    });\n  }, ['troika-text', font, text]);\n  React.useLayoutEffect(function () {\n    return void troikaMesh.sync(function () {\n      invalidate();\n      if (onSync) onSync(troikaMesh);\n    });\n  });\n  React.useEffect(function () {\n    return function () {\n      return troikaMesh.dispose();\n    };\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\nexport { Text };","map":{"version":3,"sources":["C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@react-three/drei/core/Text.js"],"names":["_extends","React","Text","Text$1","preloadFont","useThree","suspend","forwardRef","ref","anchorX","anchorY","font","children","onSync","props","invalidate","useState","troikaMesh","useMemo","n","t","Children","forEach","child","push","nodes","text","Promise","res","characters","useLayoutEffect","sync","useEffect","dispose","createElement","object"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAI,IAAIC,MAAjB,EAAyBC,WAAzB,QAA4C,mBAA5C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CAEA;;AACA,IAAMJ,IAAI,GAAG,aAAaD,KAAK,CAACM,UAAN,CAAiB,gBAOxCC,GAPwC,EAOhC;AAAA,0BANTC,OAMS;AAAA,MANTA,OAMS,6BANC,QAMD;AAAA,0BALTC,OAKS;AAAA,MALTA,OAKS,6BALC,QAKD;AAAA,MAJTC,IAIS,QAJTA,IAIS;AAAA,MAHTC,QAGS,QAHTA,QAGS;AAAA,MAFTC,MAES,QAFTA,MAES;AAAA,MADNC,KACM;;AACT,MAAMC,UAAU,GAAGV,QAAQ,CAAC;AAAA,QAC1BU,UAD0B,SAC1BA,UAD0B;AAAA,WAEtBA,UAFsB;AAAA,GAAD,CAA3B;;AAGA,wBAAqBd,KAAK,CAACe,QAAN,CAAe;AAAA,WAAM,IAAIb,MAAJ,EAAN;AAAA,GAAf,CAArB;AAAA;AAAA,MAAOc,UAAP;;AACA,uBAAsBhB,KAAK,CAACiB,OAAN,CAAc,YAAM;AACxC,QAAMC,CAAC,GAAG,EAAV;AACA,QAAIC,CAAC,GAAG,EAAR;AACAnB,IAAAA,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBV,QAAvB,EAAiC,UAAAW,KAAK,EAAI;AACxC,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AAC1DH,QAAAA,CAAC,IAAIG,KAAL;AACD,OAFD,MAEO;AACLJ,QAAAA,CAAC,CAACK,IAAF,CAAOD,KAAP;AACD;AACF,KAND;AAOA,WAAO,CAACJ,CAAD,EAAIC,CAAJ,CAAP;AACD,GAXqB,EAWnB,CAACR,QAAD,CAXmB,CAAtB;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,IAAd;;AAYApB,EAAAA,OAAO,CAAC;AAAA,WAAM,IAAIqB,OAAJ,CAAY,UAAAC,GAAG;AAAA,aAAIxB,WAAW,CAAC;AAC3CO,QAAAA,IAAI,EAAJA,IAD2C;AAE3CkB,QAAAA,UAAU,EAAEH;AAF+B,OAAD,EAGzCE,GAHyC,CAAf;AAAA,KAAf,CAAN;AAAA,GAAD,EAGG,CAAC,aAAD,EAAgBjB,IAAhB,EAAsBe,IAAtB,CAHH,CAAP;AAIAzB,EAAAA,KAAK,CAAC6B,eAAN,CAAsB;AAAA,WAAM,KAAKb,UAAU,CAACc,IAAX,CAAgB,YAAM;AACrDhB,MAAAA,UAAU;AACV,UAAIF,MAAJ,EAAYA,MAAM,CAACI,UAAD,CAAN;AACb,KAHgC,CAAX;AAAA,GAAtB;AAIAhB,EAAAA,KAAK,CAAC+B,SAAN,CAAgB,YAAM;AACpB,WAAO;AAAA,aAAMf,UAAU,CAACgB,OAAX,EAAN;AAAA,KAAP;AACD,GAFD,EAEG,CAAChB,UAAD,CAFH;AAGA,SAAO,aAAahB,KAAK,CAACiC,aAAN,CAAoB,WAApB,EAAiClC,QAAQ,CAAC;AAC5DmC,IAAAA,MAAM,EAAElB,UADoD;AAE5DT,IAAAA,GAAG,EAAEA,GAFuD;AAG5DG,IAAAA,IAAI,EAAEA,IAHsD;AAI5De,IAAAA,IAAI,EAAEA,IAJsD;AAK5DjB,IAAAA,OAAO,EAAEA,OALmD;AAM5DC,IAAAA,OAAO,EAAEA;AANmD,GAAD,EAO1DI,KAP0D,CAAzC,EAOTW,KAPS,CAApB;AAQD,CA3CyB,CAA1B;AA6CA,SAASvB,IAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\n// eslint-disable-next-line prettier/prettier\nconst Text = /*#__PURE__*/React.forwardRef(({\n  anchorX = 'center',\n  anchorY = 'middle',\n  font,\n  children,\n  onSync,\n  ...props\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new Text$1());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters: text\n  }, res)), ['troika-text', font, text]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY\n  }, props), nodes);\n});\n\nexport { Text };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nvar PointMaterialImpl = /*#__PURE__*/function (_THREE$PointsMaterial) {\n  _inherits(PointMaterialImpl, _THREE$PointsMaterial);\n\n  var _super = _createSuper(PointMaterialImpl);\n\n  function PointMaterialImpl(props) {\n    var _this;\n\n    _classCallCheck(this, PointMaterialImpl);\n\n    _this = _super.call(this, props);\n\n    _this.onBeforeCompile = function (shader) {\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', \"\\n        #include <output_fragment>\\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\\n      float r = dot(cxy, cxy);\\n      float delta = fwidth(r);     \\n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\\n      \");\n    };\n\n    return _this;\n  }\n\n  return _createClass(PointMaterialImpl);\n}(THREE.PointsMaterial);\n\nvar PointMaterial = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useState = React.useState(function () {\n    return new PointMaterialImpl(null);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      material = _React$useState2[0];\n\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { PointMaterial, PointMaterialImpl };","map":{"version":3,"sources":["C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@react-three/drei/core/PointMaterial.js"],"names":["_extends","THREE","React","PointMaterialImpl","props","onBeforeCompile","shader","fragmentShader","replace","PointsMaterial","PointMaterial","forwardRef","ref","useState","material","createElement","object","attach"],"mappings":";;;;;AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AAEA,UAAKC,eAAL,GAAuB,UAAAC,MAAM,EAAI;AAC/BA,MAAAA,MAAM,CAACC,cAAP,GAAwBD,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,4BAA9B,4SAAxB;AAQD,KATD;;AAHiB;AAalB;;;EAd6BP,KAAK,CAACQ,c;;AAiBtC,IAAMC,aAAa,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,UAACP,KAAD,EAAQQ,GAAR,EAAgB;AAClE,wBAAmBV,KAAK,CAACW,QAAN,CAAe;AAAA,WAAM,IAAIV,iBAAJ,CAAsB,IAAtB,CAAN;AAAA,GAAf,CAAnB;AAAA;AAAA,MAAOW,QAAP;;AACA,SAAO,aAAaZ,KAAK,CAACa,aAAN,CAAoB,WAApB,EAAiCf,QAAQ,CAAC;AAC5DgB,IAAAA,MAAM,EAAEF,QADoD;AAE5DF,IAAAA,GAAG,EAAEA,GAFuD;AAG5DK,IAAAA,MAAM,EAAE;AAHoD,GAAD,EAI1Db,KAJ0D,CAAzC,CAApB;AAKD,CAPkC,CAAnC;AASA,SAASM,aAAT,EAAwBP,iBAAxB","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n\n    this.onBeforeCompile = shader => {\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', `\n        #include <output_fragment>\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      `);\n    };\n  }\n\n}\nconst PointMaterial = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n"]},"metadata":{},"sourceType":"module"}
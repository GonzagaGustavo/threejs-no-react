{"ast":null,"code":"import _classCallCheck from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from 'three';\nimport { BokehDepthShader, BokehShader2 } from '../shaders/BokehShader2.js';\n\nvar CinematicCamera = /*#__PURE__*/function (_PerspectiveCamera) {\n  _inherits(CinematicCamera, _PerspectiveCamera);\n\n  var _super = _createSuper(CinematicCamera);\n\n  function CinematicCamera(fov, aspect, near, far) {\n    var _this;\n\n    _classCallCheck(this, CinematicCamera);\n\n    _this = _super.call(this, fov, aspect, near, far);\n    _this.type = 'CinematicCamera';\n    _this.postprocessing = {\n      enabled: true\n    };\n    _this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    var depthShader = BokehDepthShader;\n    _this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    _this.materialDepth.uniforms['mNear'].value = near;\n    _this.materialDepth.uniforms['mFar'].value = far; // In case of cinematicCamera, having a default lens set is important\n\n    _this.setLens();\n\n    _this.initPostProcessing();\n\n    return _this;\n  } // providing fnumber and coc(Circle of Confusion) as extra arguments\n\n\n  _createClass(CinematicCamera, [{\n    key: \"setLens\",\n    value: function setLens(focalLength, filmGauge, fNumber, coc) {\n      // In case of cinematicCamera, having a default lens set is important\n      if (focalLength === undefined) focalLength = 35;\n      if (filmGauge !== undefined) this.filmGauge = filmGauge;\n      this.setFocalLength(focalLength); // if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\n      if (fNumber === undefined) fNumber = 8;\n      if (coc === undefined) coc = 0.019;\n      this.fNumber = fNumber;\n      this.coc = coc; // fNumber is focalLength by aperture\n\n      this.aperture = focalLength / this.fNumber; // hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\n      this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n    }\n  }, {\n    key: \"linearize\",\n    value: function linearize(depth) {\n      var zfar = this.far;\n      var znear = this.near;\n      return -zfar * znear / (depth * (zfar - znear) - zfar);\n    }\n  }, {\n    key: \"smoothstep\",\n    value: function smoothstep(near, far, depth) {\n      var x = this.saturate((depth - near) / (far - near));\n      return x * x * (3 - 2 * x);\n    }\n  }, {\n    key: \"saturate\",\n    value: function saturate(x) {\n      return Math.max(0, Math.min(1, x));\n    } // function for focusing at a distance from the camera\n\n  }, {\n    key: \"focusAt\",\n    value: function focusAt(focusDistance) {\n      if (focusDistance === undefined) focusDistance = 20;\n      var focalLength = this.getFocalLength(); // distance from the camera (normal to frustrum) to focus on\n\n      this.focus = focusDistance; // the nearest point from the camera which is in focus (unused)\n\n      this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength)); // the farthest point from the camera which is in focus (unused)\n\n      this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength)); // the gap or width of the space in which is everything is in focus (unused)\n\n      this.depthOfField = this.farPoint - this.nearPoint; // Considering minimum distance of focus for a standard lens (unused)\n\n      if (this.depthOfField < 0) this.depthOfField = 0;\n      this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n      this.ldistance = this.linearize(1 - this.sdistance);\n      this.postprocessing.bokeh_uniforms['focalDepth'].value = this.ldistance;\n    }\n  }, {\n    key: \"initPostProcessing\",\n    value: function initPostProcessing() {\n      if (this.postprocessing.enabled) {\n        this.postprocessing.scene = new Scene();\n        this.postprocessing.camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, -10000, 10000);\n        this.postprocessing.scene.add(this.postprocessing.camera);\n        this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n        this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n        var bokeh_shader = BokehShader2;\n        this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n        this.postprocessing.bokeh_uniforms['tColor'].value = this.postprocessing.rtTextureColor.texture;\n        this.postprocessing.bokeh_uniforms['tDepth'].value = this.postprocessing.rtTextureDepth.texture;\n        this.postprocessing.bokeh_uniforms['manualdof'].value = 0;\n        this.postprocessing.bokeh_uniforms['shaderFocus'].value = 0;\n        this.postprocessing.bokeh_uniforms['fstop'].value = 2.8;\n        this.postprocessing.bokeh_uniforms['showFocus'].value = 1;\n        this.postprocessing.bokeh_uniforms['focalDepth'].value = 0.1; //console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n        this.postprocessing.bokeh_uniforms['znear'].value = this.near;\n        this.postprocessing.bokeh_uniforms['zfar'].value = this.near;\n        this.postprocessing.bokeh_uniforms['textureWidth'].value = window.innerWidth;\n        this.postprocessing.bokeh_uniforms['textureHeight'].value = window.innerHeight;\n        this.postprocessing.materialBokeh = new ShaderMaterial({\n          uniforms: this.postprocessing.bokeh_uniforms,\n          vertexShader: bokeh_shader.vertexShader,\n          fragmentShader: bokeh_shader.fragmentShader,\n          defines: {\n            RINGS: this.shaderSettings.rings,\n            SAMPLES: this.shaderSettings.samples,\n            DEPTH_PACKING: 1\n          }\n        });\n        this.postprocessing.quad = new Mesh(new PlaneGeometry(window.innerWidth, window.innerHeight), this.postprocessing.materialBokeh);\n        this.postprocessing.quad.position.z = -500;\n        this.postprocessing.scene.add(this.postprocessing.quad);\n      }\n    }\n  }, {\n    key: \"renderCinematic\",\n    value: function renderCinematic(scene, renderer) {\n      if (this.postprocessing.enabled) {\n        var currentRenderTarget = renderer.getRenderTarget();\n        renderer.clear(); // Render scene into texture\n\n        scene.overrideMaterial = null;\n        renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n        renderer.clear();\n        renderer.render(scene, this); // Render depth into texture\n\n        scene.overrideMaterial = this.materialDepth;\n        renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n        renderer.clear();\n        renderer.render(scene, this); // Render bokeh composite\n\n        renderer.setRenderTarget(null);\n        renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n        renderer.setRenderTarget(currentRenderTarget);\n      }\n    }\n  }]);\n\n  return CinematicCamera;\n}(PerspectiveCamera);\n\nexport { CinematicCamera };","map":{"version":3,"sources":["C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/three-stdlib/cameras/CinematicCamera.js"],"names":["PerspectiveCamera","ShaderMaterial","Scene","OrthographicCamera","WebGLRenderTarget","UniformsUtils","Mesh","PlaneGeometry","BokehDepthShader","BokehShader2","CinematicCamera","fov","aspect","near","far","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","materialDepth","uniforms","vertexShader","fragmentShader","value","setLens","initPostProcessing","focalLength","filmGauge","fNumber","coc","undefined","setFocalLength","aperture","hyperFocal","depth","zfar","znear","x","saturate","Math","max","min","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","smoothstep","ldistance","linearize","bokeh_uniforms","scene","camera","window","innerWidth","innerHeight","add","rtTextureDepth","rtTextureColor","bokeh_shader","clone","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","position","z","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","render"],"mappings":"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","sourcesContent":["import { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from 'three';\nimport { BokehDepthShader, BokehShader2 } from '../shaders/BokehShader2.js';\n\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = 'CinematicCamera';\n    this.postprocessing = {\n      enabled: true\n    };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms['mNear'].value = near;\n    this.materialDepth.uniforms['mFar'].value = far; // In case of cinematicCamera, having a default lens set is important\n\n    this.setLens();\n    this.initPostProcessing();\n  } // providing fnumber and coc(Circle of Confusion) as extra arguments\n\n\n  setLens(focalLength, filmGauge, fNumber, coc) {\n    // In case of cinematicCamera, having a default lens set is important\n    if (focalLength === undefined) focalLength = 35;\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength); // if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\n    if (fNumber === undefined) fNumber = 8;\n    if (coc === undefined) coc = 0.019;\n    this.fNumber = fNumber;\n    this.coc = coc; // fNumber is focalLength by aperture\n\n    this.aperture = focalLength / this.fNumber; // hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  } // function for focusing at a distance from the camera\n\n\n  focusAt(focusDistance) {\n    if (focusDistance === undefined) focusDistance = 20;\n    const focalLength = this.getFocalLength(); // distance from the camera (normal to frustrum) to focus on\n\n    this.focus = focusDistance; // the nearest point from the camera which is in focus (unused)\n\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength)); // the farthest point from the camera which is in focus (unused)\n\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength)); // the gap or width of the space in which is everything is in focus (unused)\n\n    this.depthOfField = this.farPoint - this.nearPoint; // Considering minimum distance of focus for a standard lens (unused)\n\n    if (this.depthOfField < 0) this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms['focalDepth'].value = this.ldistance;\n  }\n\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, -10000, 10000);\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader2;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms['tColor'].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms['tDepth'].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms['manualdof'].value = 0;\n      this.postprocessing.bokeh_uniforms['shaderFocus'].value = 0;\n      this.postprocessing.bokeh_uniforms['fstop'].value = 2.8;\n      this.postprocessing.bokeh_uniforms['showFocus'].value = 1;\n      this.postprocessing.bokeh_uniforms['focalDepth'].value = 0.1; //console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n      this.postprocessing.bokeh_uniforms['znear'].value = this.near;\n      this.postprocessing.bokeh_uniforms['zfar'].value = this.near;\n      this.postprocessing.bokeh_uniforms['textureWidth'].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms['textureHeight'].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(new PlaneGeometry(window.innerWidth, window.innerHeight), this.postprocessing.materialBokeh);\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear(); // Render scene into texture\n\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this); // Render depth into texture\n\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this); // Render bokeh composite\n\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n\n}\n\nexport { CinematicCamera };\n"]},"metadata":{},"sourceType":"module"}
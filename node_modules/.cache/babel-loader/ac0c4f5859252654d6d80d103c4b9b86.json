{"ast":null,"code":"import _defineProperty from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"context\", \"children\"],\n    _excluded2 = [\"children\", \"range\", \"limit\", \"frames\"],\n    _excluded3 = [\"meshes\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nvar i, instanceRef;\nvar globalContext = /*#__PURE__*/React.createContext(null);\nvar parentMatrix = new THREE.Matrix4();\nvar instanceMatrix = new THREE.Matrix4();\nvar tempMatrix = new THREE.Matrix4();\nvar color = new THREE.Color();\nvar translation = new THREE.Vector3();\nvar rotation = new THREE.Quaternion();\nvar scale = new THREE.Vector3();\nvar Instance = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var context = _ref.context,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  React.useMemo(function () {\n    return extend({\n      Position: Position\n    });\n  }, []);\n  var group = React.useRef();\n\n  var _React$useContext = React.useContext(context || globalContext),\n      subscribe = _React$useContext.subscribe,\n      getParent = _React$useContext.getParent;\n\n  React.useLayoutEffect(function () {\n    return subscribe(group);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nvar Instances = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      range = _ref2.range,\n      _ref2$limit = _ref2.limit,\n      limit = _ref2$limit === void 0 ? 1000 : _ref2$limit,\n      _ref2$frames = _ref2.frames,\n      frames = _ref2$frames === void 0 ? Infinity : _ref2$frames,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  var _React$useState = React.useState(function () {\n    var context = /*#__PURE__*/React.createContext(null);\n    return {\n      context: context,\n      instance: /*#__PURE__*/React.forwardRef(function (props, ref) {\n        return /*#__PURE__*/React.createElement(Instance, _extends({\n          context: context\n        }, props, {\n          ref: ref\n        }));\n      })\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      _React$useState2$ = _React$useState2[0],\n      context = _React$useState2$.context,\n      instance = _React$useState2$.instance;\n\n  var parentRef = React.useRef(null);\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      instances = _React$useState4[0],\n      setInstances = _React$useState4[1];\n\n  var _React$useState5 = React.useState(function () {\n    var mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) {\n      tempMatrix.identity().toArray(mArray, i * 16);\n    }\n\n    return [mArray, new Float32Array(_toConsumableArray(new Array(limit * 3)).map(function () {\n      return 1;\n    }))];\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      _React$useState6$ = _slicedToArray(_React$useState6[0], 2),\n      matrices = _React$useState6$[0],\n      colors = _React$useState6$[1];\n\n  React.useLayoutEffect(function () {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(function () {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  var count = 0;\n  useFrame(function () {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  var api = React.useMemo(function () {\n    return {\n      getParent: function getParent() {\n        return parentRef;\n      },\n      subscribe: function subscribe(ref) {\n        setInstances(function (instances) {\n          return [].concat(_toConsumableArray(instances), [ref]);\n        });\n        return function () {\n          return setInstances(function (instances) {\n            return instances.filter(function (item) {\n              return item.current !== ref.current;\n            });\n          });\n        };\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances: instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: function raycast() {\n      return null;\n    }\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged(_ref3) {\n  var meshes = _ref3.meshes,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, _excluded3);\n\n  var isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (var _i = 0, _Object$keys = Object.keys(meshes); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (!meshes[key].isMesh) delete meshes[key];\n  }\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(function (_ref4) {\n      var geometry = _ref4.geometry,\n          material = _ref4.material;\n      return /*#__PURE__*/React.createElement(Instances, _extends({\n        key: geometry.uuid,\n        geometry: geometry,\n        material: material\n      }, props));\n    })\n  }, function (args) {\n    return isArray ? children.apply(void 0, _toConsumableArray(args)) : children(Object.keys(meshes).filter(function (key) {\n      return meshes[key].isMesh;\n    }).reduce(function (acc, key, i) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, args[i]));\n    }, {}));\n  });\n}\n\nexport { Instance, Instances, Merged };","map":{"version":3,"sources":["C:/Users/Gustavo Gonzaga/Documents/GitHub/threejsnoreact/node_modules/@react-three/drei/core/Instances.js"],"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","color","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","ref","context","children","props","useMemo","group","useRef","useContext","subscribe","getParent","useLayoutEffect","createElement","instance","instanceKey","Instances","range","limit","frames","Infinity","useState","parentRef","instances","setInstances","mArray","Float32Array","identity","toArray","Array","map","matrices","colors","current","count","updateRange","instanceColor","Math","min","undefined","length","useEffect","needsUpdate","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","decompose","compose","premultiply","equals","fromArray","api","filter","item","userData","matrixAutoUpdate","args","raycast","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","Object","keys","key","isMesh","components","values","geometry","material","uuid","reduce","acc"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"]},"metadata":{},"sourceType":"module"}